events { 
    worker_connections 1024; 
}

http {
    # Upstream API (2 backend)
    upstream api_upstream {
        least_conn;
        server backend:8080 max_fails=3 fail_timeout=10s;
        server backend2:8080 max_fails=3 fail_timeout=10s;
        keepalive 64;
    }

    # Upstream frontend (Vite dev nhớ chạy với --host 0.0.0.0)
    upstream fe_upstream {
        server frontend:5173;
    }

    # *** Rate limit ***
    # KHI CHẠY k6: tăng rate/burst, đổi status 429, hoặc tắt hẳn (dry_run)
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=500r/s;
    # Hoặc theo dõi mà không chặn:
    # limit_req_dry_run on;

    server {
        listen 80;
        server_name localhost;

        # ---------- API ----------
        location ^~ /api/ws/ {
            # WebSocket
            proxy_pass http://api_upstream;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_read_timeout 1h;
            add_header Access-Control-Allow-Origin * always;
        }

        location ^~ /api/ {
            # Rate limit: nâng burst và trả 429 thay vì 503 để dễ nhận biết
            limit_req zone=mylimit burst=1000 nodelay;
            limit_req_status 429;

            # Strip /api/ trước khi đẩy sang upstream
            rewrite ^/api/(.*)$ /$1 break;

            proxy_pass http://api_upstream;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_connect_timeout 2s;
            proxy_send_timeout 10s;
            proxy_read_timeout 30s;

            # Cho phép chuyển server khác khi lỗi
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;

            # CORS (thêm always để áp dụng cả khi 4xx/5xx)
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization" always;

            if ($request_method = OPTIONS) {
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
        }

        # ---------- Frontend ----------
        location / {
            proxy_pass http://fe_upstream;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
